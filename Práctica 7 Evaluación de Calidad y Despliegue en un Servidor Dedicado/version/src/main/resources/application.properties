spring.application.name=version
spring.datasource.url=jdbc:mysql://localhost:3306/book_movie_recommendation_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
server.port=8083

# Configuración para subida de archivos
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Configuración de recursos estáticos
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/static/**

# Directorio para almacenar las fotos
app.upload.dir=uploads/profiles/

# Add these lines
spring.web.resources.add-mappings=true
spring.mvc.throw-exception-if-no-handler-found=false

server.error.whitelabel.enabled=false
server.error.path=/error

# TVMaze API Configuration
tvmaze.api.base-url=https://api.tvmaze.com
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# Agregar esto para ver los valores de los parámetros en los logs
# Set logging levels
logging.level.com.web.book.version.service=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Añadir estas propiedades para mejor depuración de vistas
logging.level.org.thymeleaf=DEBUG

# API Keys Configuration
api.keys.google-client-id=disabled
api.keys.google-client-secret=disabled
api.keys.google-auth-enabled=false

# Conditional OAuth2 configuration - only used if google-auth-enabled=true
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:disabled}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:disabled}
spring.security.oauth2.client.registration.google.scope=email,profile
#spring.security.oauth2.client.registration.google.enabled=${api.keys.google-auth-enabled:false}

spring.main.allow-circular-references=true

# Detailed logging pattern with timestamp and thread
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Configuración de logging
logging.level.org.springframework.web=DEBUG
logging.level.root=INFO
logging.level.com.web.book.version=DEBUG
logging.level.com.web.book.version.controller=DEBUG

# Dropbox Configuration
dropbox.access.token=${DROPBOX_ACCESS_TOKEN:sl.CEUCpk7kO6yoRVbX-iHQfN9Y5NdRV4NI4RSdMv89Jd6el1oZ90xnAIyj0RHQETlJMrD1nkJas2igYBMCt1RdJrCTYYg11eLCy9atiBjopT7xX66e5_Uky3WOuuTO1U5Od_yLZ3kxtu8zMZiPSvjACUk}
dropbox.app.key=${DROPBOX_APP_KEY:rkoqvb47n1jr7vu}
dropbox.app.secret=${DROPBOX_APP_SECRET:0po2j6okfk70rux}